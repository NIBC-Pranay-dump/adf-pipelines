{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"ls_api_cloud": {
			"type": "string"
		},
		"ls_adls_auto_resolve": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_rest_api_cloud_sfmc_new')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Use this pipeline to connect the the API managed services REST API",
				"activities": [
					{
						"name": "Get access token",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Get secret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"url": "https://login.microsoftonline.com/8614d95f-762b-4789-a741-2589e3d0b08b/oauth2/v2.0/token",
							"body": {
								"value": "@concat('client_id=', pipeline().globalParameters.cip_client_id, '&scope=', pipeline().globalParameters.cip_scope, '&client_secret=', activity('Get secret').output.pipelineReturnValue.keyvault_secret_value, '&grant_type=client_credentials')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get secret",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_util_get_keyvault_secret",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"keyvault_secret_name": {
									"value": "@pipeline().parameters.key_vault_secret_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "set file_name",
						"description": "Set file name using download timestamp",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "set download timestamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "file_name",
							"value": {
								"value": "@replace(\n    pipeline().parameters.file_name_template, \n    '{timestamp}', \n    variables('download_timestamp')\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set download timestamp",
						"description": "Set download timestamp in west europe timezone",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get access token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "download_timestamp",
							"value": {
								"value": "@formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','W. Europe Standard Time'), 'yyyyMMdd_HHmmss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "convert json to parquet",
						"description": "Copy json data to a flattened parquet file, selecting items, adding the file_name and download_timestamp columns",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set file_name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "file_name",
										"value": {
											"value": "@variables('file_name')",
											"type": "Expression"
										}
									},
									{
										"name": "download_timestamp",
										"value": {
											"value": "@variables('download_timestamp')",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Authorization": {
										"value": "@concat('Bearer ', activity('Get access token').output['access_token'])",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"value": "@json(string(pipeline().parameters.column_mapping))",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_rest_api_cloud",
								"type": "DatasetReference",
								"parameters": {
									"relative_url": {
										"value": "@pipeline().parameters.relative_url",
										"type": "Expression"
									},
									"base_url": "@pipeline().parameters.base_url"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_parquet_auto_resolve",
								"type": "DatasetReference",
								"parameters": {
									"datastore_name": {
										"value": "@pipeline().parameters.datastore_name",
										"type": "Expression"
									},
									"dataset_name": {
										"value": "@pipeline().parameters.dataset_name",
										"type": "Expression"
									},
									"storage_account_uri": {
										"value": "@pipeline().globalParameters.storage_account_datalake_uri",
										"type": "Expression"
									},
									"container_name": {
										"value": "@pipeline().globalParameters.storage_container_datalake",
										"type": "Expression"
									},
									"file_name": {
										"value": "@replace(variables('file_name'),'.json','')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"datastore_name": {
						"type": "string",
						"defaultValue": "salesforce_marketing_cloud"
					},
					"dataset_name": {
						"type": "string",
						"defaultValue": "customer_data"
					},
					"relative_url": {
						"type": "string",
						"defaultValue": "customer-data"
					},
					"base_url": {
						"type": "string",
						"defaultValue": "https://apim.dev.cloud.nibc.com/internal/salesforcemarketingcloud-api/1.0"
					},
					"key_vault_secret_name": {
						"type": "string",
						"defaultValue": "apim-authorization-access-token"
					},
					"file_name_template": {
						"type": "string",
						"defaultValue": "customer_data_{timestamp}.json"
					},
					"column_mapping": {
						"type": "string",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"path": "$['links']"
									},
									"sink": {
										"name": "links"
									}
								},
								{
									"source": {
										"path": "$['requestToken']"
									},
									"sink": {
										"name": "requestToken"
									}
								},
								{
									"source": {
										"path": "$['tokenExpireDateUtc']"
									},
									"sink": {
										"name": "tokenExpireDateUtc"
									}
								},
								{
									"source": {
										"path": "$['customObjectId']"
									},
									"sink": {
										"name": "customObjectId"
									}
								},
								{
									"source": {
										"path": "$['customObjectKey']"
									},
									"sink": {
										"name": "customObjectKey"
									}
								},
								{
									"source": {
										"path": "$['pageSize']"
									},
									"sink": {
										"name": "pageSize"
									}
								},
								{
									"source": {
										"path": "$['page']"
									},
									"sink": {
										"name": "page"
									}
								},
								{
									"source": {
										"path": "$['count']"
									},
									"sink": {
										"name": "count"
									}
								},
								{
									"source": {
										"path": "$['top']"
									},
									"sink": {
										"name": "top"
									}
								},
								{
									"source": {
										"path": "$['items']"
									},
									"sink": {
										"name": "items"
									}
								},
								{
									"source": {
										"path": "file_name"
									},
									"sink": {
										"name": "file_name"
									}
								},
								{
									"source": {
										"path": "download_timestamp"
									},
									"sink": {
										"name": "download_timestamp"
									}
								}
							],
							"mapComplexValuesToString": true
						}
					}
				},
				"variables": {
					"download_timestamp": {
						"type": "String"
					},
					"file_name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "cloud"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_util_get_keyvault_secret')]",
				"[concat(variables('factoryId'), '/datasets/ds_rest_api_cloud')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_parquet_auto_resolve')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_util_get_keyvault_secret')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get password",
						"description": "Based on: https://learn.microsoft.com/en-us/azure/data-factory/how-to-use-azure-key-vault-secrets-pipeline-activities",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"url": {
								"value": "@concat(pipeline().globalParameters.key_vault_uri, 'secrets/', pipeline().parameters.keyvault_secret_name, '?api-version=7.2')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "set as return value",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "get password",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineReturnValue",
							"value": [
								{
									"key": "keyvault_secret_value",
									"value": {
										"type": "Expression",
										"content": "@activity('get password').output.value"
									}
								}
							],
							"setSystemVariable": true
						}
					}
				],
				"parameters": {
					"keyvault_secret_name": {
						"type": "string"
					}
				},
				"variables": {
					"x": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_rest_api_cloud')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('ls_api_cloud')]",
					"type": "LinkedServiceReference",
					"parameters": {
						"base_url": {
							"value": "@dataset().base_url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"relative_url": {
						"type": "string"
					},
					"base_url": {
						"type": "string"
					}
				},
				"folder": {
					"name": "cloud"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().relative_url",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_parquet_auto_resolve')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('ls_adls_auto_resolve')]",
					"type": "LinkedServiceReference",
					"parameters": {
						"storage_account_uri": {
							"value": "@dataset().storage_account_uri",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"datastore_name": {
						"type": "String"
					},
					"dataset_name": {
						"type": "String"
					},
					"storage_account_uri": {
						"type": "String"
					},
					"container_name": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "auto_resolve"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().file_name, '.snappy.parquet')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('datastore_', dataset().datastore_name, '/dataset_', dataset().dataset_name)",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container_name",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		}
	]
}
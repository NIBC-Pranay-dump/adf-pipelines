{
	"name": "pl_rest_api_subscription_cloud",
	"properties": {
		"description": "Use this pipeline to connect the the API managed services REST API",
		"activities": [
			{
				"name": "Get PIM token",
				"description": "Fetches an authentication token from Microsoft Entra Privileged Identity Management. This token is used in subsequent API calls.",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Get secret",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"headers": {
						"Content-Type": "application/x-www-form-urlencoded"
					},
					"url": {
						"value": "@pipeline().parameters.token_url",
						"type": "Expression"
					},
					"body": {
						"value": "@concat('client_id=', pipeline().parameters.microsoft_entra_cid, '&scope=', pipeline().parameters.microsoft_entra_scope, '&client_secret=', activity('Get secret').output.pipelineReturnValue.keyvault_secret_value, '&grant_type=client_credentials')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get secret",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_util_get_keyvault_secret",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"keyvault_secret_name": {
							"value": "@pipeline().parameters.key_vault_secret_name",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Get Service Bus token",
				"description": "Fetches an authentication token from Microsoft Entra Privileged Identity Management. This token is used in subsequent API calls.",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Get PIM token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"headers": {
						"Content-Type": "application/x-www-form-urlencoded"
					},
					"url": {
						"value": "@pipeline().parameters.token_url",
						"type": "Expression"
					},
					"body": {
						"value": "@concat('client_id=', pipeline().parameters.microsoft_entra_cid, '&scope=', pipeline().parameters.token_scope_service_bus, '&client_secret=', activity('Get secret').output.pipelineReturnValue.keyvault_secret_value, '&grant_type=client_credentials')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get Storage token",
				"description": "Fetches an authentication token from Microsoft Entra Privileged Identity Management. This token is used in subsequent API calls.",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Get Service Bus token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"headers": {
						"Content-Type": "application/x-www-form-urlencoded"
					},
					"url": {
						"value": "@pipeline().parameters.token_url",
						"type": "Expression"
					},
					"body": {
						"value": "@concat('client_id=', pipeline().parameters.microsoft_entra_cid, '&scope=', pipeline().parameters.token_scope_storage, '&client_secret=', activity('Get secret').output.pipelineReturnValue.keyvault_secret_value, '&grant_type=client_credentials')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "content-length is 0",
				"description": "when no message are available the content-length will be 0. This iteration creates an array with all available references from service bus\n\nin case you want to kill the process after a couple of runs you can use following code:\n@or(equals(variables('content-length'),0), equals(length(variables('references')),2))\n\noterwise:\n@equals(variables('content-length'),0)",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "Get Storage token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('content-length'),0)",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Get reference link from Service Bus",
							"description": "Fetches a reference link from the Service Bus to download a file from the Storage Account",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"method": "POST",
								"headers": {
									"Authorization": {
										"value": "@concat('Bearer ', \n        activity('Get PIM token').output['access_token']\n)",
										"type": "Expression"
									},
									"ServiceBus-Authorization": {
										"value": "@concat('Bearer ', \n        activity('Get Service Bus token').output['access_token']\n)",
										"type": "Expression"
									},
									"Topic": {
										"value": "@pipeline().parameters.service_bus_topic",
										"type": "Expression"
									},
									"Subscription": {
										"value": "@pipeline().parameters.service_bus_topic_subscription",
										"type": "Expression"
									}
								},
								"url": {
									"value": "@concat(pipeline().parameters.base_url,pipeline().parameters.relative_url,'receive-message')",
									"type": "Expression"
								},
								"connectVia": {
									"referenceName": "cloud",
									"type": "IntegrationRuntimeReference"
								},
								"body": "dummy"
							}
						},
						{
							"name": "content-length",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Get reference link from Service Bus",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "content-length",
								"value": {
									"value": "@int(activity('Get reference link from Service Bus').output['ADFWebActivityResponseHeaders']['Content-Length'])",
									"type": "Expression"
								}
							}
						},
						{
							"name": "content-length greater than 0",
							"description": "when no message are available the content-length will be 0",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "content-length",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(variables('content-length'),0)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "file name",
										"type": "SetVariable",
										"dependsOn": [],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "filename",
											"value": {
												"value": "@activity('Get reference link from Service Bus').output['ADFWebActivityResponseHeaders']['File-Name']",
												"type": "Expression"
											}
										}
									},
									{
										"name": "data name",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "file name",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "dataname",
											"value": {
												"value": "@activity('Get reference link from Service Bus').output['ADFWebActivityResponseHeaders']['Data-Name']",
												"type": "Expression"
											}
										}
									},
									{
										"name": "reference ink",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "data name",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "reference_link",
											"value": {
												"value": "@activity('Get reference link from Service Bus').output['referenceLink']",
												"type": "Expression"
											}
										}
									},
									{
										"name": "download timestamp",
										"description": "Set download timestamp in west europe timezone",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "reference ink",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "download_timestamp",
											"value": {
												"value": "@formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','W. Europe Standard Time'), 'yyyyMMdd_HHmmss')",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Append reference",
										"description": "appends json (with filename, dataname, referencelink and download timestamp) to array",
										"type": "AppendVariable",
										"dependsOn": [
											{
												"activity": "download timestamp",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "references",
											"value": {
												"value": "@json(concat('{\n    \"reference_link\":\"',variables('reference_link'),'\",\n    \"filename\":\"',variables('filename'),'\",\n    \"download_timestamp\":\"',variables('download_timestamp'),'\",\n    \"dataname\":\"',variables('dataname'),'\",\n    \"content-length\":',variables('content-length'),'\n}'))",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					],
					"timeout": "0.12:00:00"
				}
			},
			{
				"name": "ForEach reference",
				"description": "store all the references as csv (ingestion) and parquet (datalake)",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "ALL REFERENCES COMBINED",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('references')",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy HTTP to CSV",
							"description": "used HTTP instead of REST because REST expects json as a response",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "download timestamp 2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "HttpReadSettings",
										"requestMethod": "POST",
										"additionalHeaders": {
											"value": "Authorization: Bearer @{activity('Get PIM token').output['access_token']}\nStorage-Authorization: Bearer @{activity('Get Storage token').output['access_token']}\nContent-Type: application/json\n",
											"type": "Expression"
										},
										"requestBody": {
											"value": "@concat('{\"referenceLink\": \"',variables('reference_link'),'\"}')",
											"type": "Expression"
										},
										"requestTimeout": ""
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ds_anonymous_http_binary_cloud",
									"type": "DatasetReference",
									"parameters": {
										"base_url": "@pipeline().parameters.base_url",
										"relative_url": "@concat(pipeline().parameters.relative_url,'receive-blob')"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_blob_binary_azure_shir",
									"type": "DatasetReference",
									"parameters": {
										"storage_account_uri": "@pipeline().globalParameters.storage_account_data_factory_uri",
										"container_name": "@pipeline().globalParameters.storage_container_data_factory",
										"datastore_name": "@pipeline().parameters.datastore_name",
										"dataset_name": "@variables('dataname')",
										"file_name": "@concat(variables('dataname'),'.csv')"
									}
								}
							]
						},
						{
							"name": "Copy CSV to parquet",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Copy HTTP to CSV",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"additionalColumns": [
										{
											"name": "filename",
											"value": {
												"value": "@variables('filename')",
												"type": "Expression"
											}
										},
										{
											"name": "dataname",
											"value": {
												"value": "@variables('dataname')",
												"type": "Expression"
											}
										},
										{
											"name": "reference_link",
											"value": {
												"value": "@variables('reference_link')",
												"type": "Expression"
											}
										},
										{
											"name": "download_timestamp",
											"value": {
												"value": "@variables('download_timestamp')",
												"type": "Expression"
											}
										}
									],
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_blob_csv_azure_shir",
									"type": "DatasetReference",
									"parameters": {
										"storage_account_uri": "@pipeline().globalParameters.storage_account_data_factory_uri",
										"container_name": "@pipeline().globalParameters.storage_container_data_factory",
										"datastore_name": "@pipeline().parameters.datastore_name",
										"dataset_name": "@variables('dataname')",
										"file_name": "@concat(variables('dataname'),'.csv')",
										"column_delimiter": ",",
										"encoding": "UTF-8",
										"first_row_as_header": false
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_adls_parquet_auto_resolve",
									"type": "DatasetReference",
									"parameters": {
										"datastore_name": "@pipeline().parameters.datastore_name",
										"dataset_name": "@variables('dataname')",
										"storage_account_uri": "@pipeline().globalParameters.storage_account_datalake_uri",
										"container_name": "@pipeline().globalParameters.storage_container_datalake",
										"file_name": {
											"value": "@variables('dataname')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "reference link 2",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "reference_link",
								"value": {
									"value": "@item()['reference_link']",
									"type": "Expression"
								}
							}
						},
						{
							"name": "file name 2",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "reference link 2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "filename",
								"value": {
									"value": "@item()['filename']",
									"type": "Expression"
								}
							}
						},
						{
							"name": "data name 2",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "file name 2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "dataname",
								"value": {
									"value": "@item()['dataname']",
									"type": "Expression"
								}
							}
						},
						{
							"name": "download timestamp 2",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "data name 2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "download_timestamp",
								"value": {
									"value": "@item()['download_timestamp']\n\n",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "ALL REFERENCES COMBINED",
				"description": "this variable is just to easily lookup all the references",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "content-length is 0",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "foreach_array",
					"value": {
						"value": "@variables('references')",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"datastore_name": {
				"type": "string",
				"defaultValue": "ods_savings"
			},
			"relative_url": {
				"type": "string",
				"defaultValue": "/internal/consumer/1.0/"
			},
			"base_url": {
				"type": "string",
				"defaultValue": "https://apim.dev.cloud.nibc.com"
			},
			"key_vault_secret_name": {
				"type": "string",
				"defaultValue": "apim-authorization-access-token"
			},
			"microsoft_entra_cid": {
				"type": "string",
				"defaultValue": "a1bb61c1-d7c6-468b-9e6a-720dcd63ce91"
			},
			"microsoft_entra_scope": {
				"type": "string",
				"defaultValue": "https://apim.dev.cloud.nibc.com/.default"
			},
			"token_url": {
				"type": "string",
				"defaultValue": "https://login.microsoftonline.com/8614d95f-762b-4789-a741-2589e3d0b08b/oauth2/v2.0/token"
			},
			"token_scope_service_bus": {
				"type": "string",
				"defaultValue": "https://servicebus.azure.net/.default"
			},
			"token_scope_storage": {
				"type": "string",
				"defaultValue": "https://storage.azure.com/.default"
			},
			"service_bus_topic": {
				"type": "string",
				"defaultValue": "ods-savings"
			},
			"service_bus_topic_subscription": {
				"type": "string",
				"defaultValue": "cdp"
			}
		},
		"variables": {
			"filename": {
				"type": "String"
			},
			"dataname": {
				"type": "String"
			},
			"reference_link": {
				"type": "String"
			},
			"download_timestamp": {
				"type": "String"
			},
			"content-length": {
				"type": "Integer",
				"defaultValue": 100
			},
			"references": {
				"type": "Array"
			},
			"foreach_array": {
				"type": "Array"
			}
		},
		"folder": {
			"name": "cloud"
		},
		"annotations": []
	}
}
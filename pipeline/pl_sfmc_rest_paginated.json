{
	"name": "pl_sfmc_rest_paginated",
	"properties": {
		"description": "The pipeline should run to ingest customer data from Salesforce Marketing Cloud Rest api",
		"activities": [
			{
				"name": "Get access token",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Get secret",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"headers": {
						"Content-Type": "application/x-www-form-urlencoded"
					},
					"url": "https://login.microsoftonline.com/8614d95f-762b-4789-a741-2589e3d0b08b/oauth2/v2.0/token",
					"body": {
						"value": "@concat('client_id=', pipeline().globalParameters.cip_client_id, '&scope=', pipeline().globalParameters.cip_scope, '&client_secret=', activity('Get secret').output.pipelineReturnValue.keyvault_secret_value, '&grant_type=client_credentials')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get secret",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"policy": {
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_util_get_keyvault_secret",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"keyvault_secret_name": {
							"value": "@pipeline().parameters.key_vault_secret_name",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "rest to parquet",
				"description": "Copy rest json data to a flattened parquet file, selecting items, adding the file_name and download_timestamp columns",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Get access token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"additionalHeaders": {
							"Authorization": {
								"value": "@concat('Bearer ', activity('Get access token').output['access_token'])",
								"type": "Expression"
							}
						},
						"paginationRules": {
							"AbsoluteUrl.{page_number}": "RANGE:1:10000:1",
							"EndCondition:$.links.next": "NonExist"
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings",
							"copyBehavior": "PreserveHierarchy"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"value": "@json(string(pipeline().parameters.column_mapping))",
						"type": "Expression"
					}
				},
				"inputs": [
					{
						"referenceName": "ds_rest_api_cloud",
						"type": "DatasetReference",
						"parameters": {
							"relative_url": {
								"value": "@concat(pipeline().parameters.relative_url, '?$page={page_number}')",
								"type": "Expression"
							},
							"base_url": "@pipeline().parameters.base_url"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_adls_parquet_auto_resolve",
						"type": "DatasetReference",
						"parameters": {
							"datastore_name": {
								"value": "@pipeline().parameters.datastore_name",
								"type": "Expression"
							},
							"dataset_name": {
								"value": "@pipeline().parameters.dataset_name",
								"type": "Expression"
							},
							"storage_account_uri": {
								"value": "@pipeline().globalParameters.storage_account_datalake_uri",
								"type": "Expression"
							},
							"container_name": {
								"value": "@pipeline().globalParameters.storage_container_datalake",
								"type": "Expression"
							},
							"file_name": {
								"value": "@pipeline().parameters.dataset_name",
								"type": "Expression"
							}
						}
					}
				]
			}
		],
		"parameters": {
			"datastore_name": {
				"type": "string",
				"defaultValue": "salesforce_marketing_cloud"
			},
			"dataset_name": {
				"type": "string",
				"defaultValue": "customer_data"
			},
			"relative_url": {
				"type": "string",
				"defaultValue": "internal/salesforcemarketingcloud-customer-data-api/1.0/customer-data"
			},
			"base_url": {
				"type": "string",
				"defaultValue": "https://apim.dev.cloud.nibc.com"
			},
			"key_vault_secret_name": {
				"type": "string",
				"defaultValue": "apim-authorization-access-token"
			},
			"column_mapping": {
				"type": "string",
				"defaultValue": {
					"type": "TabularTranslator",
					"mappings": [
						{
							"source": {
								"path": "$['links']"
							},
							"sink": {
								"name": "links"
							}
						},
						{
							"source": {
								"path": "$['requestToken']"
							},
							"sink": {
								"name": "requestToken"
							}
						},
						{
							"source": {
								"path": "$['tokenExpireDateUtc']"
							},
							"sink": {
								"name": "tokenExpireDateUtc"
							}
						},
						{
							"source": {
								"path": "$['customObjectId']"
							},
							"sink": {
								"name": "customObjectId"
							}
						},
						{
							"source": {
								"path": "$['customObjectKey']"
							},
							"sink": {
								"name": "customObjectKey"
							}
						},
						{
							"source": {
								"path": "$['pageSize']"
							},
							"sink": {
								"name": "pageSize"
							}
						},
						{
							"source": {
								"path": "$['page']"
							},
							"sink": {
								"name": "page"
							}
						},
						{
							"source": {
								"path": "$['count']"
							},
							"sink": {
								"name": "count"
							}
						},
						{
							"source": {
								"path": "$['top']"
							},
							"sink": {
								"name": "top"
							}
						},
						{
							"source": {
								"path": "$['items']"
							},
							"sink": {
								"name": "items"
							}
						}
					],
					"mapComplexValuesToString": true
				}
			}
		},
		"folder": {
			"name": "cloud"
		},
		"annotations": []
	}
}
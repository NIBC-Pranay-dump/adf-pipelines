{
	"name": "pl_anonymous_http_xml_sfmc",
	"properties": {
		"activities": [
			{
				"name": "store raw XML",
				"description": "Store raw XML, with download timestamp in file name",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "set file_name",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "GET"
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "ds_anonymous_http_binary_cloud",
						"type": "DatasetReference",
						"parameters": {
							"base_url": {
								"value": "@pipeline().parameters.base_url",
								"type": "Expression"
							},
							"relative_url": {
								"value": "@pipeline().parameters.relative_url",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_blob_binary_cloud",
						"type": "DatasetReference",
						"parameters": {
							"storage_account_uri": {
								"value": "@pipeline().globalParameters.storage_account_data_factory_uri",
								"type": "Expression"
							},
							"container_name": {
								"value": "@pipeline().globalParameters.storage_container_data_factory",
								"type": "Expression"
							},
							"datastore_name": {
								"value": "@pipeline().parameters.datastore_name",
								"type": "Expression"
							},
							"dataset_name": {
								"value": "@pipeline().parameters.dataset_name",
								"type": "Expression"
							},
							"file_name": {
								"value": "@variables('file_name')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "convert XML to parquet",
				"description": "Copy XML data to a flattened parquet file, adding the file_name and download_timestamp columns",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "store raw XML",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "XmlSource",
						"additionalColumns": [
							{
								"name": "file_name",
								"value": {
									"value": "@variables('file_name')",
									"type": "Expression"
								}
							},
							{
								"name": "download_timestamp",
								"value": {
									"value": "@variables('download_timestamp')",
									"type": "Expression"
								}
							}
						],
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": false,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "XmlReadSettings",
							"validationMode": "none",
							"detectDataType": false,
							"namespaces": true
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"value": "@json(string(pipeline().parameters.column_mapping))",
						"type": "Expression"
					}
				},
				"inputs": [
					{
						"referenceName": "ds_blob_xml_cloud",
						"type": "DatasetReference",
						"parameters": {
							"storage_account_uri": {
								"value": "@pipeline().globalParameters.storage_account_data_factory_uri",
								"type": "Expression"
							},
							"container_name": {
								"value": "@pipeline().globalParameters.storage_container_data_factory",
								"type": "Expression"
							},
							"datastore_name": {
								"value": "@pipeline().parameters.datastore_name",
								"type": "Expression"
							},
							"dataset_name": {
								"value": "@pipeline().parameters.dataset_name",
								"type": "Expression"
							},
							"file_name": {
								"value": "@variables('file_name')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_adls_parquet_auto_resolve",
						"type": "DatasetReference",
						"parameters": {
							"datastore_name": {
								"value": "@pipeline().parameters.datastore_name",
								"type": "Expression"
							},
							"dataset_name": {
								"value": "@pipeline().parameters.dataset_name",
								"type": "Expression"
							},
							"storage_account_uri": {
								"value": "@pipeline().globalParameters.storage_account_datalake_uri",
								"type": "Expression"
							},
							"container_name": {
								"value": "@pipeline().globalParameters.storage_container_datalake",
								"type": "Expression"
							},
							"file_name": {
								"value": "@replace(variables('file_name'),'.xml','')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "set file_name",
				"description": "Set file name using download timestamp",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "set download timestamp",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "file_name",
					"value": {
						"value": "@replace(\n    pipeline().parameters.relative_url, \n    '.xml', \n    concat('_',variables('download_timestamp'),'.xml')\n)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set download timestamp",
				"description": "Set download timestamp in west europe timezone",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "download_timestamp",
					"value": {
						"value": "@formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','W. Europe Standard Time'), 'yyyyMMdd_HHmmss')",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"base_url": {
				"type": "String",
				"defaultValue": "https://apim.dev.cloud.nibc.com/internal/salesforcemarketingcloud-event-data-api/"
			},
			"dataset_name": {
				"type": "String",
				"defaultValue": "sfmc_event_data"
			},
			"datastore_name": {
				"type": "String",
				"defaultValue": "sfmc_event_test"
			},
			"relative_url": {
				"type": "string",
				"defaultValue": "1.0"
			},
			"column_mapping": {
				"type": "string",
				"defaultValue": {
					"type": "TabularTranslator",
					"mappings": [
						{
							"source": {
								"path": "$['rentevoeten']"
							},
							"sink": {
								"name": "$['rentevoeten']"
							}
						},
						{
							"source": {
								"path": "file_name"
							},
							"sink": {
								"name": "file_name"
							}
						},
						{
							"source": {
								"path": "download_timestamp"
							},
							"sink": {
								"name": "download_timestamp"
							}
						}
					],
					"mapComplexValuesToString": true
				}
			}
		},
		"variables": {
			"file_name": {
				"type": "String"
			},
			"download_timestamp": {
				"type": "String"
			}
		},
		"folder": {
			"name": "cloud"
		},
		"annotations": [],
		"lastPublishTime": "2024-02-08T15:34:06Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}
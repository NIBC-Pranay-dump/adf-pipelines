{
	"name": "pl_rest_api_cloud_zip",
	"properties": {
		"description": "Use this pipeline to connect the the API managed services REST API where you need to list the dataset and the output is a zip",
		"activities": [
			{
				"name": "Get secret",
				"description": "Get the secret needed to get the authentication access token.",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"policy": {
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_util_get_keyvault_secret",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"keyvault_secret_name": {
							"value": "@pipeline().parameters.key_vault_secret_name",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "List datasets",
				"description": "List the datasets available for download",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Get access token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"method": "GET",
					"headers": {
						"Authorization": {
							"value": "@concat('Bearer ', activity('Get access token').output['access_token'])",
							"type": "Expression"
						}
					},
					"url": {
						"value": "@concat(pipeline().parameters.base_url, pipeline().parameters.relative_url_listing)",
						"type": "Expression"
					},
					"connectVia": {
						"referenceName": "cloud",
						"type": "IntegrationRuntimeReference"
					}
				}
			},
			{
				"name": "Set dataset name",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "List datasets",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "dataset_name",
					"value": {
						"value": "@json(activity('List datasets').output['files'])",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get access token",
				"description": "Access token needed to authenticate to the Integration API",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Get secret",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"headers": {
						"Content-Type": "application/x-www-form-urlencoded"
					},
					"url": "https://login.microsoftonline.com/8614d95f-762b-4789-a741-2589e3d0b08b/oauth2/v2.0/token",
					"body": {
						"value": "@concat('client_id=', pipeline().parameters.microsoft_entra_cid, '&scope=', pipeline().parameters.microsoft_entra_scope, '&client_secret=', activity('Get secret').output.pipelineReturnValue.keyvault_secret_value, '&grant_type=client_credentials')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Download each zip file avaliable",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Set dataset name",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('dataset_name')",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Binary Download",
							"description": "Copies the REST API zipped dataset to ingestion storage account.",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": true,
								"secureInput": true
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "HttpReadSettings",
										"requestMethod": "GET",
										"additionalHeaders": {
											"value": "@concat('\n  Authorization: Bearer '\n    , activity('Get access token').output['access_token'], '\n  Filename: ', item()\n)",
											"type": "Expression"
										}
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ds_anonymous_http_binary_cloud",
									"type": "DatasetReference",
									"parameters": {
										"base_url": {
											"value": "@pipeline().parameters.base_url",
											"type": "Expression"
										},
										"relative_url": {
											"value": "@pipeline().parameters.relative_url_retrival",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_blob_binary_cloud",
									"type": "DatasetReference",
									"parameters": {
										"storage_account_uri": {
											"value": "@pipeline().globalParameters.storage_account_data_factory_uri",
											"type": "Expression"
										},
										"container_name": {
											"value": "@pipeline().globalParameters.storage_container_data_factory",
											"type": "Expression"
										},
										"datastore_name": {
											"value": "@pipeline().parameters.datastore_name",
											"type": "Expression"
										},
										"dataset_name": {
											"value": "@pipeline().parameters.dataset_name",
											"type": "Expression"
										},
										"file_name": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Zipped CSV to Parquet",
							"description": "Then extract each csv file in the zip",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Binary Download",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Set file_date",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": true,
								"secureInput": true
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"additionalColumns": [
										{
											"name": "bag_file_date",
											"value": {
												"value": "@variables('file_date')",
												"type": "Expression"
											}
										}
									],
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"wildcardFolderPath": {
											"value": "@concat(\n    'datastore_', pipeline().parameters.datastore_name,\n    '/dataset_', pipeline().parameters.dataset_name\n)",
											"type": "Expression"
										},
										"wildcardFileName": {
											"value": "@item()",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings",
										"compressionProperties": {
											"type": "ZipDeflateReadSettings",
											"preserveZipFileNameAsFolder": false
										}
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_blob_zipped_csv_unpack_auto_resolve",
									"type": "DatasetReference",
									"parameters": {
										"storage_account_uri": {
											"value": "@pipeline().globalParameters.storage_account_data_factory_uri",
											"type": "Expression"
										},
										"container_name": {
											"value": "@pipeline().globalParameters.storage_container_data_factory",
											"type": "Expression"
										},
										"datastore_name": {
											"value": "@pipeline().parameters.datastore_name",
											"type": "Expression"
										},
										"column_delimiter": {
											"value": "@pipeline().parameters.column_delimiter",
											"type": "Expression"
										},
										"encoding": "UTF-8",
										"first_row_as_header": true
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_adls_parquet_auto_resolve",
									"type": "DatasetReference",
									"parameters": {
										"datastore_name": {
											"value": "@pipeline().parameters.datastore_name",
											"type": "Expression"
										},
										"dataset_name": {
											"value": "@pipeline().parameters.dataset_name",
											"type": "Expression"
										},
										"storage_account_uri": {
											"value": "@pipeline().globalParameters.storage_account_datalake_uri",
											"type": "Expression"
										},
										"container_name": {
											"value": "@pipeline().globalParameters.storage_container_datalake",
											"type": "Expression"
										},
										"file_name": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Set file_date",
							"description": "Set the variable file_date to the date in the name of the file. This is added as a separate column in the output dataset",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "file_date",
								"value": {
									"value": "@substring(item(), add(lastIndexOf(item(), '_'), 1), 8)",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"datastore_name": {
				"type": "string",
				"defaultValue": "bagpro"
			},
			"dataset_name": {
				"type": "string",
				"defaultValue": "bagpro"
			},
			"base_url": {
				"type": "string",
				"defaultValue": "https://apim.dev.cloud.nibc.com"
			},
			"relative_url_listing": {
				"type": "string",
				"defaultValue": "/internal/cddn/bagpro-api/1.0/list"
			},
			"relative_url_retrival": {
				"type": "string",
				"defaultValue": "/internal/cddn/bagpro-api/1.0/retrieve"
			},
			"key_vault_secret_name": {
				"type": "string",
				"defaultValue": "apim-authorization-access-token"
			},
			"microsoft_entra_cid": {
				"type": "string",
				"defaultValue": "a1bb61c1-d7c6-468b-9e6a-720dcd63ce91"
			},
			"microsoft_entra_scope": {
				"type": "string",
				"defaultValue": "0c28ca60-24cd-45bd-95f1-01fdaee9c41c/.default"
			},
			"column_delimiter": {
				"type": "string",
				"defaultValue": ";"
			}
		},
		"variables": {
			"dataset_name": {
				"type": "Array"
			},
			"file_date": {
				"type": "String"
			}
		},
		"folder": {
			"name": "cloud"
		},
		"annotations": []
	}
}

{
	"name": "pl_fileserver_csv_on_prem_full_load_specific_day_archive",
	"properties": {
		"description": "ADF pipeline to copy files from a file server reachable through acp SHIR\nUsing append only ingestion pattern\nGetting only last month's data",
		"activities": [
			{
				"name": "Detect Available Data",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "file pattern",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "FileServerReadSettings",
							"recursive": false,
							"wildcardFileName": {
								"value": "@variables('file_pattern_specified')",
								"type": "Expression"
							},
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings",
							"skipLineCount": {
								"value": "@pipeline().parameters.skip_line_count",
								"type": "Expression"
							}
						}
					},
					"dataset": {
						"referenceName": "ds_fileserver_csv_directory_on_prem",
						"type": "DatasetReference",
						"parameters": {
							"user_name": {
								"value": "@pipeline().parameters.fileserver_user_name",
								"type": "Expression"
							},
							"host_name": {
								"value": "@pipeline().parameters.fileserver_host_name",
								"type": "Expression"
							},
							"key_vault_uri": {
								"value": "@pipeline().globalParameters.key_vault_uri",
								"type": "Expression"
							},
							"fileserver_password_secret_name": {
								"value": "@pipeline().parameters.keyvault_secret_name",
								"type": "Expression"
							},
							"directory": {
								"value": "@pipeline().parameters.fileserver_directory",
								"type": "Expression"
							},
							"column_delimiter": {
								"value": "@pipeline().parameters.column_delimiter",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "Has Data",
				"description": "We check if the lookup found any data",
				"type": "IfCondition",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Detect Available Data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@contains(activity('Detect Available Data').output, 'firstRow')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Copy csv from fileserver to ADLS",
							"description": "Copy csv-files from fileserver to ADLS as parquet",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Delete old parquet files in ADLS",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"additionalColumns": [
										{
											"name": "_adf_ingestion_file",
											"value": {
												"value": "@concat(pipeline().parameters.dataset_name, '_', variables('functional_date'))",
												"type": "Expression"
											}
										}
									],
									"storeSettings": {
										"type": "FileServerReadSettings",
										"recursive": false,
										"wildcardFileName": {
											"value": "@variables('file_pattern_specified')",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings",
										"skipLineCount": {
											"value": "@pipeline().parameters.skip_line_count",
											"type": "Expression"
										}
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings",
										"copyBehavior": "PreserveHierarchy"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_fileserver_csv_directory_on_prem",
									"type": "DatasetReference",
									"parameters": {
										"user_name": {
											"value": "@pipeline().parameters.fileserver_user_name",
											"type": "Expression"
										},
										"host_name": {
											"value": "@pipeline().parameters.fileserver_host_name",
											"type": "Expression"
										},
										"key_vault_uri": {
											"value": "@pipeline().globalParameters.key_vault_uri",
											"type": "Expression"
										},
										"fileserver_password_secret_name": {
											"value": "@pipeline().parameters.keyvault_secret_name",
											"type": "Expression"
										},
										"directory": {
											"value": "@pipeline().parameters.fileserver_directory",
											"type": "Expression"
										},
										"column_delimiter": {
											"value": "@pipeline().parameters.column_delimiter",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_adls_parquet_auto_resolve",
									"type": "DatasetReference",
									"parameters": {
										"datastore_name": {
											"value": "@pipeline().parameters.datastore_name",
											"type": "Expression"
										},
										"dataset_name": {
											"value": "@pipeline().parameters.dataset_name",
											"type": "Expression"
										},
										"storage_account_uri": {
											"value": "@pipeline().globalParameters.storage_account_datalake_uri",
											"type": "Expression"
										},
										"container_name": {
											"value": "@pipeline().globalParameters.storage_container_datalake",
											"type": "Expression"
										},
										"file_name": "dummy"
									}
								}
							]
						},
						{
							"name": "Delete old parquet files in ADLS",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_adls_folder_azure_shir",
									"type": "DatasetReference",
									"parameters": {
										"storage_account_uri": "@pipeline().globalParameters.storage_account_datalake_uri",
										"container_name": "@pipeline().globalParameters.storage_container_datalake",
										"folder_name": {
											"value": "@concat('datastore_', pipeline().parameters.datastore_name, '/','dataset_', pipeline().parameters.dataset_name)",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFileName": {
										"value": "@{variables('file_pattern_specified')}",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							}
						}
					]
				}
			},
			{
				"name": "functional date",
				"description": "Based on current date or provided parameter value, set functional date",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "functional_date",
					"value": {
						"value": "@if(equals(pipeline().parameters.functional_date,'{yyyyMMdd}'), formatDateTime(convertTimeZone(pipeline().TriggerTime,'UTC','W. Europe Standard Time'), 'yyyyMMdd'), pipeline().parameters.functional_date)\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "file pattern",
				"description": "Fill functional date placeholder with variable value",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "functional date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "file_pattern_specified",
					"value": {
						"value": "@replace(\n    pipeline().parameters.source_file_name_pattern,\n    '{functional_date}',\n    variables('functional_date')\n)",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"keyvault_secret_name": {
				"type": "string",
				"defaultValue": "fileserver-credentials-ods-dev"
			},
			"datastore_name": {
				"type": "string",
				"defaultValue": "ods_mortgages"
			},
			"dataset_name": {
				"type": "string",
				"defaultValue": "hds_t_brdg_loan_arrears"
			},
			"source_file_name_pattern": {
				"type": "string",
				"defaultValue": "hds_t_brdg_loan_arrears_file*{functional_date}.csv"
			},
			"fileserver_user_name": {
				"type": "string",
				"defaultValue": "PRD\\SRV_AA_DEV"
			},
			"fileserver_host_name": {
				"type": "string",
				"defaultValue": "\\\\SVNIBCFILD101\\e$"
			},
			"fileserver_directory": {
				"type": "string",
				"defaultValue": "CDP\\Retail_ODS\\hds_mortgages"
			},
			"column_delimiter": {
				"type": "string",
				"defaultValue": "|&|"
			},
			"skip_line_count": {
				"type": "int",
				"defaultValue": 2
			},
			"functional_date": {
				"type": "string",
				"defaultValue": "{yyyyMMdd}"
			},
			"enable_archive": {
				"type": "bool",
				"defaultValue": false
			}
		},
		"variables": {
			"functional_date": {
				"type": "String",
				"defaultValue": "x"
			},
			"file_pattern_specified": {
				"type": "String"
			}
		},
		"folder": {
			"name": "on_prem"
		},
		"annotations": [],
		"lastPublishTime": "2025-05-08T12:57:23Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}
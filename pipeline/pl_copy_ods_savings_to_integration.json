{
	"name": "pl_copy_ods_savings_to_integration",
	"properties": {
		"description": "ADF pipeline to copy files from a file server ",
		"activities": [
			{
				"name": "files",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "files",
					"value": [
						"hds_t_brdg_product_intrest_file_1_of_1_20240110_20240110.csv",
						"hds_t_brdg_role_account_client_file_1_of_1_20231222_20231222.csv",
						"hds_t_dim_account_file_1_of_4_20240112_20240112.csv",
						"hds_t_dim_product_file_1_of_1_20231222_20231222.csv",
						"hds_t_fct_balance_file_1_of_11_20231222_20231222.csv",
						"hds_t_fct_transaction_file_1_of_1_20231222_20231222.csv"
					]
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('files')",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy aa-fileserver to ingestion",
							"description": "Copy csv-files from aa-fileserver data to ingestion as binary",
							"type": "Copy",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "FileServerReadSettings",
										"recursive": false
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ds_fileserver_binary_on_prem",
									"type": "DatasetReference",
									"parameters": {
										"user_name": {
											"value": "@pipeline().parameters.fileserver_user_name",
											"type": "Expression"
										},
										"host_name": {
											"value": "@pipeline().parameters.fileserver_host_name",
											"type": "Expression"
										},
										"key_vault_uri": {
											"value": "@pipeline().globalParameters.key_vault_uri",
											"type": "Expression"
										},
										"fileserver_password_secret_name": {
											"value": "@pipeline().parameters.keyvault_secret_name",
											"type": "Expression"
										},
										"directory": {
											"value": "@pipeline().parameters.fileserver_directory",
											"type": "Expression"
										},
										"file_name": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_blob_binary_auto_resolve",
									"type": "DatasetReference",
									"parameters": {
										"storage_account_uri": {
											"value": "@pipeline().globalParameters.storage_account_data_factory_uri",
											"type": "Expression"
										},
										"container_name": {
											"value": "@pipeline().globalParameters.storage_container_data_factory",
											"type": "Expression"
										},
										"datastore_name": {
											"value": "@pipeline().parameters.datastore_name",
											"type": "Expression"
										},
										"dataset_name": {
											"value": "@variables('dataset_name')",
											"type": "Expression"
										},
										"file_name": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "extract dataset",
							"description": "extract dataset from filename",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "dataset_name",
								"value": {
									"value": "@split(item(),'_file')[0]",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Copy ingestion to datalake",
							"description": "Copy ingestion csv-files to datalake as parquet ",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "extract dataset",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings",
										"skipLineCount": {
											"value": "@pipeline().parameters.skip_line_count",
											"type": "Expression"
										}
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_blob_csv_azure_shir",
									"type": "DatasetReference",
									"parameters": {
										"storage_account_uri": {
											"value": "@pipeline().globalParameters.storage_account_data_factory_uri",
											"type": "Expression"
										},
										"container_name": {
											"value": "@pipeline().globalParameters.storage_container_data_factory",
											"type": "Expression"
										},
										"datastore_name": {
											"value": "@pipeline().parameters.datastore_name",
											"type": "Expression"
										},
										"dataset_name": {
											"value": "@variables('dataset_name')",
											"type": "Expression"
										},
										"file_name": {
											"value": "@item()",
											"type": "Expression"
										},
										"column_delimiter": {
											"value": "@pipeline().parameters.column_delimiter",
											"type": "Expression"
										},
										"encoding": "UTF-8",
										"first_row_as_header": true
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_adls_parquet_auto_resolve",
									"type": "DatasetReference",
									"parameters": {
										"datastore_name": {
											"value": "@pipeline().parameters.datastore_name",
											"type": "Expression"
										},
										"dataset_name": {
											"value": "@variables('dataset_name')",
											"type": "Expression"
										},
										"storage_account_uri": {
											"value": "@pipeline().globalParameters.storage_account_data_factory_uri",
											"type": "Expression"
										},
										"container_name": {
											"value": "@pipeline().globalParameters.storage_container_data_factory",
											"type": "Expression"
										},
										"file_name": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"keyvault_secret_name": {
				"type": "string",
				"defaultValue": "fileserver-credentials-ods"
			},
			"datastore_name": {
				"type": "string",
				"defaultValue": "ods_savings"
			},
			"fileserver_user_name": {
				"type": "string",
				"defaultValue": "PRD\\SRV_AA_DEV"
			},
			"fileserver_host_name": {
				"type": "string",
				"defaultValue": "\\\\SVNIBCFILD101\\e$"
			},
			"fileserver_directory": {
				"type": "string",
				"defaultValue": "Archive\\Retail_ODS\\hds_savings\\Daily"
			},
			"column_delimiter": {
				"type": "string",
				"defaultValue": "|&|"
			},
			"skip_line_count": {
				"type": "int",
				"defaultValue": 2
			}
		},
		"variables": {
			"files": {
				"type": "Array"
			},
			"dataset_name": {
				"type": "String"
			}
		},
		"folder": {
			"name": "dick"
		},
		"annotations": []
	}
}